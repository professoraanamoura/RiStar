/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ristar.gui;

import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import ristar.transformation.transformations.Transformacao;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author anamm
 */
public class ElementSelectionGUI extends javax.swing.JFrame {

    private String javaDirLocation;
    private Transformacao transformacao;

    /**
     * Creates new form elementSelectionGUI
     */
    public ElementSelectionGUI() {
        transformacao = new Transformacao();
        this.setUndecorated(true);
        initComponents();
        this.setSize(1250, 700);
        this.setState(JFrame.NORMAL);

    }

    public ElementSelectionGUI(Transformacao transformacao) {
        this();
        this.transformacao = transformacao;
        this.javaDirLocation = this.transformacao.getJavaFileLocation();
        updateSourceCodePath();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSelDir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnSelectAll = new javax.swing.JButton();
        btnClearSelection = new javax.swing.JButton();
        txtDir = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lClasses = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Source Code Path:");

        btnSelDir.setText("Select Path");
        btnSelDir.setActionCommand("");
        btnSelDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelDirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Elements:");

        btnSelectAll.setText("Select All");
        btnSelectAll.setPreferredSize(new java.awt.Dimension(119, 25));
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        btnClearSelection.setText("Clear Selection");
        btnClearSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSelectionActionPerformed(evt);
            }
        });

        txtDir.setEditable(false);
        txtDir.setBackground(java.awt.SystemColor.controlHighlight);
        txtDir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnClose.setText("close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lClasses.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(lClasses);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSelDir, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnClearSelection)))
                            .addGap(18, 18, 18)
                            .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearSelection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnClose))
                .addContainerGap(222, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(220, 120, 1010, 590);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IstarReverseBackground.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1420, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelDirActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            this.javaDirLocation = chooser.getSelectedFile().getPath();
            txtDir.setText(javaDirLocation);
            //Adicionando os elementos encontrados.
            DefaultListModel model = new DefaultListModel();
            List<String> names = new ArrayList<>();
            try {
                List<ClassOrInterfaceDeclaration> elements = transformacao.getListaClasses(javaDirLocation);
                for (ClassOrInterfaceDeclaration element : elements) {
                    names.add(element.getNameAsString());
                }
                Collections.sort(names);
                for (String name : names) {
                    model.addElement(name);
                }
            } catch (Exception ex) {
                Logger.getLogger(ElementSelectionGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            lClasses.setModel(model);
            if (model.getSize() == 0) {
                JOptionPane.showMessageDialog(this, "Nenhum elemento foi encontrado.", "RiSTAR", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnSelDirActionPerformed

    private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed

        lClasses.addSelectionInterval(0, lClasses.getModel().getSize()-1);

    }//GEN-LAST:event_btnSelectAllActionPerformed

    private void btnClearSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSelectionActionPerformed
        lClasses.clearSelection();
    }//GEN-LAST:event_btnClearSelectionActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (!lClasses.getSelectedValuesList().isEmpty()) {
            List<ClassOrInterfaceDeclaration> selectedClasses = new ArrayList<ClassOrInterfaceDeclaration>();
            List<ClassOrInterfaceDeclaration> allClasses = null;
            try {
                allClasses = transformacao.getListaClasses(javaDirLocation);
            } catch (Exception ex) {
                Logger.getLogger(ElementSelectionGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (ClassOrInterfaceDeclaration classe : allClasses) {
                if (lClasses.getSelectedValuesList().contains(classe.getNameAsString())) {
                    selectedClasses.add(classe);
                }
            }
            transformacao.setSelectedClasses(selectedClasses);
            transformacao.setJavaFileLocation(javaDirLocation);
            RuleSelectionGUI ruleSelectionGUI = new RuleSelectionGUI(transformacao);
            ruleSelectionGUI.setVisible(true);

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Select at least one element!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElementSelectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElementSelectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElementSelectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElementSelectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElementSelectionGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearSelection;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSelDir;
    private javax.swing.JButton btnSelectAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lClasses;
    private javax.swing.JTextField txtDir;
    // End of variables declaration//GEN-END:variables

    private void updateSourceCodePath() {

        txtDir.setText(javaDirLocation);
        //Adicionando os elementos encontrados.
        DefaultListModel model = new DefaultListModel();
        try {
            for (ClassOrInterfaceDeclaration element : transformacao.getListaClasses(javaDirLocation)) {
                model.addElement(element.getNameAsString());
            }
        } catch (Exception ex) {
            Logger.getLogger(ElementSelectionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        lClasses.setModel(model);
    }
}
